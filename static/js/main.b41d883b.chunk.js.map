{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","good","style","color","name","id","getAll","fetch","then","response","ok","headers","get","includes","json","Promise","reject","Error","status","statusText","SortType","App","useState","setGoods","sortType","setSortType","getGoods","param","a","ALL","FIRST5","RED","newGoods","sort","g1","g2","localeCompare","slice","filter","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8PAOaA,EAA6BC,IAAMC,MAAK,YAAgB,IAAbC,EAAY,EAAZA,MACtD,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,YCPb,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAa,IAAD,EAChB,OAAKA,EAASC,GAMV,UAACD,EAASE,QAAQC,IAAI,uBAAtB,OAAC,EAAsCC,SAAS,oBAM7CJ,EAASK,OALPC,QAAQC,OACb,IAAIC,MAAM,kCAPLF,QAAQC,OACb,IAAIC,MAAJ,UAAaR,EAASS,OAAtB,cAAkCT,EAASU,iBAc9C,ICfFC,G,SAAAA,O,aAAAA,I,mBAAAA,I,cAAAA,M,KAME,IAAMC,EAAU,WACrB,MAA0BC,mBAAiB,IAA3C,mBAAOvB,EAAP,KAAcwB,EAAd,KACA,EAAgCD,qBAAhC,mBAAOE,EAAP,KAAiBC,EAAjB,KAEMC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACXD,IAAUH,EADC,sDAOPG,EAPO,cAQRP,EAASS,IARD,SAYRT,EAASU,OAZD,SAgBRV,EAASW,IAhBD,mCASMzB,IATN,cASX0B,EATW,oDDMV1B,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZkC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAG9B,KAAKgC,cAAcD,EAAG/B,SAC1CiC,MAAM,EAAG,MCTG,eAaXL,EAbW,qDDaV1B,IACJE,MAAK,SAAAT,GAAK,OACTA,EAAMuC,QAAO,SAAArC,GAAI,MAAmB,QAAfA,EAAKE,YCfb,eAiBX6B,EAjBW,0CAqBL,IAAIf,MAAM,qBArBL,QAwBfQ,EAAYE,GACZJ,EAASS,GAzBM,4CAAH,sDA4Bd,OACE,sBAAKO,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMf,EAASN,EAASS,MAHnC,4BAQA,wBACEW,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMf,EAASN,EAASU,SAHnC,gCAQA,wBACEU,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMf,EAASN,EAASW,MAHnC,4BAQA,cAACnC,EAAD,CAAWG,MAAOA,QCxExB2C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b41d883b.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li\n          key={good.id}\n          data-cy=\"good\"\n          style={{ color: good.color }}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n});\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          new Error(`${response.status} - ${response.statusText}`),\n        );\n      }\n\n      if (!response.headers.get('content-type')?.includes('application/json')) {\n        return Promise.reject(\n          new Error('Content type is not supported'),\n        );\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((g1, g2) => g1.name.localeCompare(g2.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => (\n      goods.filter(good => good.color === 'red')\n    ));\n};\n","import { FC, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n// or\n// import * as goodsAPI from './api/goods';\n\nenum SortType {\n  ALL,\n  FIRST5,\n  RED,\n}\n\nexport const App: FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [sortType, setSortType] = useState<SortType>();\n\n  const getGoods = async (param: SortType): Promise<void> => {\n    if (param === sortType) {\n      return;\n    }\n\n    let newGoods: Good[];\n\n    switch (param) {\n      case SortType.ALL:\n        newGoods = await getAll();\n        break;\n\n      case SortType.FIRST5:\n        newGoods = await get5First();\n        break;\n\n      case SortType.RED:\n        newGoods = await getRedGoods();\n        break;\n\n      default:\n        throw new Error('unknown sort type');\n    }\n\n    setSortType(param);\n    setGoods(newGoods);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => getGoods(SortType.ALL)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => getGoods(SortType.FIRST5)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => getGoods(SortType.RED)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}